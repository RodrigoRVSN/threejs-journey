{"ast":null,"code":"import * as React from 'react';\nimport { useState, useContext, useRef, useLayoutEffect, createContext } from 'react';\nimport { useFrame } from '@react-three/fiber';\nconst context = /*#__PURE__*/createContext(null);\n\nfunction PerformanceMonitor(_ref) {\n  let {\n    iterations = 10,\n    ms = 250,\n    threshold = 0.75,\n    step = 0.1,\n    factor: _factor = 0.5,\n    flipflops = Infinity,\n    bounds = refreshrate => refreshrate > 100 ? [60, 100] : [40, 60],\n    onIncline,\n    onDecline,\n    onChange,\n    onFallback,\n    children\n  } = _ref;\n  const decimalPlacesRatio = Math.pow(10, 0);\n  const [api, _] = useState(() => ({\n    fps: 0,\n    index: 0,\n    factor: _factor,\n    flipped: 0,\n    refreshrate: 0,\n    fallback: false,\n    frames: [],\n    averages: [],\n    subscriptions: new Map(),\n    subscribe: ref => {\n      const key = Symbol();\n      api.subscriptions.set(key, ref.current);\n      return () => void api.subscriptions.delete(key);\n    }\n  }));\n  let lastFactor = 0;\n  useFrame(() => {\n    const {\n      frames,\n      averages\n    } = api; // If the fallback has been reached do not continue running samples\n\n    if (api.fallback) return;\n\n    if (averages.length < iterations) {\n      frames.push(performance.now());\n      const msPassed = frames[frames.length - 1] - frames[0];\n\n      if (msPassed >= ms) {\n        api.fps = Math.round(frames.length / msPassed * 1000 * decimalPlacesRatio) / decimalPlacesRatio;\n        api.refreshrate = Math.max(api.refreshrate, api.fps);\n        averages[api.index++ % iterations] = api.fps;\n\n        if (averages.length === iterations) {\n          const [lower, upper] = bounds(api.refreshrate);\n          const upperBounds = averages.filter(value => value >= upper);\n          const lowerBounds = averages.filter(value => value < lower); // Trigger incline when more than -threshold- avgs exceed the upper bound\n\n          if (upperBounds.length > iterations * threshold) {\n            api.factor = Math.min(1, api.factor + step);\n            api.flipped++;\n            if (onIncline) onIncline(api);\n            api.subscriptions.forEach(value => value.onIncline && value.onIncline(api));\n          } // Trigger decline when more than -threshold- avgs are below the lower bound\n\n\n          if (lowerBounds.length > iterations * threshold) {\n            api.factor = Math.max(0, api.factor - step);\n            api.flipped++;\n            if (onDecline) onDecline(api);\n            api.subscriptions.forEach(value => value.onDecline && value.onDecline(api));\n          }\n\n          if (lastFactor !== api.factor) {\n            lastFactor = api.factor;\n            if (onChange) onChange(api);\n            api.subscriptions.forEach(value => value.onChange && value.onChange(api));\n          }\n\n          if (api.flipped > flipflops && !api.fallback) {\n            api.fallback = true;\n            if (onFallback) onFallback(api);\n            api.subscriptions.forEach(value => value.onFallback && value.onFallback(api));\n          }\n\n          api.averages = []; // Resetting the refreshrate creates more problems than it solves atm\n          // api.refreshrate = 0\n        }\n\n        api.frames = [];\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children);\n}\n\nfunction usePerformanceMonitor(_ref2) {\n  let {\n    onIncline,\n    onDecline,\n    onChange,\n    onFallback\n  } = _ref2;\n  const api = useContext(context);\n  const ref = useRef({\n    onIncline,\n    onDecline,\n    onChange,\n    onFallback\n  });\n  useLayoutEffect(() => {\n    ref.current.onIncline = onIncline;\n    ref.current.onDecline = onDecline;\n    ref.current.onChange = onChange;\n    ref.current.onFallback = onFallback;\n  }, [onIncline, onDecline, onChange, onFallback]);\n  useLayoutEffect(() => api.subscribe(ref), [api]);\n}\n\nexport { PerformanceMonitor, usePerformanceMonitor };","map":{"version":3,"names":["React","useState","useContext","useRef","useLayoutEffect","createContext","useFrame","context","PerformanceMonitor","iterations","ms","threshold","step","factor","_factor","flipflops","Infinity","bounds","refreshrate","onIncline","onDecline","onChange","onFallback","children","decimalPlacesRatio","Math","pow","api","_","fps","index","flipped","fallback","frames","averages","subscriptions","Map","subscribe","ref","key","Symbol","set","current","delete","lastFactor","length","push","performance","now","msPassed","round","max","lower","upper","upperBounds","filter","value","lowerBounds","min","forEach","createElement","Provider","usePerformanceMonitor"],"sources":["/home/rodrigorvsn/workspace/study/threejs-journey/07-react-three-fiber/08-mouse-events-with-r3f/node_modules/@react-three/drei/core/PerformanceMonitor.js"],"sourcesContent":["import * as React from 'react';\nimport { useState, useContext, useRef, useLayoutEffect, createContext } from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nconst context = /*#__PURE__*/createContext(null);\nfunction PerformanceMonitor({\n  iterations = 10,\n  ms = 250,\n  threshold = 0.75,\n  step = 0.1,\n  factor: _factor = 0.5,\n  flipflops = Infinity,\n  bounds = refreshrate => refreshrate > 100 ? [60, 100] : [40, 60],\n  onIncline,\n  onDecline,\n  onChange,\n  onFallback,\n  children\n}) {\n  const decimalPlacesRatio = Math.pow(10, 0);\n  const [api, _] = useState(() => ({\n    fps: 0,\n    index: 0,\n    factor: _factor,\n    flipped: 0,\n    refreshrate: 0,\n    fallback: false,\n    frames: [],\n    averages: [],\n    subscriptions: new Map(),\n    subscribe: ref => {\n      const key = Symbol();\n      api.subscriptions.set(key, ref.current);\n      return () => void api.subscriptions.delete(key);\n    }\n  }));\n  let lastFactor = 0;\n  useFrame(() => {\n    const {\n      frames,\n      averages\n    } = api; // If the fallback has been reached do not continue running samples\n\n    if (api.fallback) return;\n\n    if (averages.length < iterations) {\n      frames.push(performance.now());\n      const msPassed = frames[frames.length - 1] - frames[0];\n\n      if (msPassed >= ms) {\n        api.fps = Math.round(frames.length / msPassed * 1000 * decimalPlacesRatio) / decimalPlacesRatio;\n        api.refreshrate = Math.max(api.refreshrate, api.fps);\n        averages[api.index++ % iterations] = api.fps;\n\n        if (averages.length === iterations) {\n          const [lower, upper] = bounds(api.refreshrate);\n          const upperBounds = averages.filter(value => value >= upper);\n          const lowerBounds = averages.filter(value => value < lower); // Trigger incline when more than -threshold- avgs exceed the upper bound\n\n          if (upperBounds.length > iterations * threshold) {\n            api.factor = Math.min(1, api.factor + step);\n            api.flipped++;\n            if (onIncline) onIncline(api);\n            api.subscriptions.forEach(value => value.onIncline && value.onIncline(api));\n          } // Trigger decline when more than -threshold- avgs are below the lower bound\n\n\n          if (lowerBounds.length > iterations * threshold) {\n            api.factor = Math.max(0, api.factor - step);\n            api.flipped++;\n            if (onDecline) onDecline(api);\n            api.subscriptions.forEach(value => value.onDecline && value.onDecline(api));\n          }\n\n          if (lastFactor !== api.factor) {\n            lastFactor = api.factor;\n            if (onChange) onChange(api);\n            api.subscriptions.forEach(value => value.onChange && value.onChange(api));\n          }\n\n          if (api.flipped > flipflops && !api.fallback) {\n            api.fallback = true;\n            if (onFallback) onFallback(api);\n            api.subscriptions.forEach(value => value.onFallback && value.onFallback(api));\n          }\n\n          api.averages = []; // Resetting the refreshrate creates more problems than it solves atm\n          // api.refreshrate = 0\n        }\n\n        api.frames = [];\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children);\n}\nfunction usePerformanceMonitor({\n  onIncline,\n  onDecline,\n  onChange,\n  onFallback\n}) {\n  const api = useContext(context);\n  const ref = useRef({\n    onIncline,\n    onDecline,\n    onChange,\n    onFallback\n  });\n  useLayoutEffect(() => {\n    ref.current.onIncline = onIncline;\n    ref.current.onDecline = onDecline;\n    ref.current.onChange = onChange;\n    ref.current.onFallback = onFallback;\n  }, [onIncline, onDecline, onChange, onFallback]);\n  useLayoutEffect(() => api.subscribe(ref), [api]);\n}\n\nexport { PerformanceMonitor, usePerformanceMonitor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}