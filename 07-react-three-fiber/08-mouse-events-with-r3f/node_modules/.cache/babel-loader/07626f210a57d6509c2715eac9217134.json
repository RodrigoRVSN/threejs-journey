{"ast":null,"code":"import { useMemo, useCallback } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Texture } from 'three';\n/**\n *  Adapted from https://github.com/brunoimbrizi/interactive-particles/blob/master/src/scripts/webgl/particles/TrailTexture.js\n *  Changes:\n *    * accepts config as constructor params\n *    * frame-rate independent aging\n *    * added option to interpolate between slow mouse events\n *    * added option for smoothing between values to avoid large jumps in force\n */\n// smooth new sample (measurement) based on previous sample (current)\n\nfunction smoothAverage(current, measurement) {\n  let smoothing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.9;\n  return measurement * smoothing + current * (1.0 - smoothing);\n} // default ease\n\n\nconst easeCircleOut = x => Math.sqrt(1 - Math.pow(x - 1, 2));\n\nclass TrailTexture {\n  constructor() {\n    let {\n      size = 256,\n      maxAge = 750,\n      radius = 0.3,\n      intensity = 0.2,\n      interpolate = 0,\n      smoothing = 0,\n      minForce = 0.3,\n      blend = 'screen',\n      // source-over is canvas default. Others are slower\n      ease = easeCircleOut\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.size = size;\n    this.maxAge = maxAge;\n    this.radius = radius;\n    this.intensity = intensity;\n    this.ease = ease;\n    this.interpolate = interpolate;\n    this.smoothing = smoothing;\n    this.minForce = minForce;\n    this.blend = blend;\n    this.trail = [];\n    this.force = 0;\n    this.initTexture();\n  }\n\n  initTexture() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = this.size;\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.texture = new Texture(this.canvas);\n    this.canvas.id = 'touchTexture';\n    this.canvas.style.width = this.canvas.style.height = `${this.canvas.width}px`;\n  }\n\n  update(delta) {\n    this.clear(); // age points\n\n    this.trail.forEach((point, i) => {\n      point.age += delta * 1000; // remove old\n\n      if (point.age > this.maxAge) {\n        this.trail.splice(i, 1);\n      }\n    }); // reset force when empty (when smoothing)\n\n    if (!this.trail.length) this.force = 0;\n    this.trail.forEach(point => {\n      this.drawTouch(point);\n    });\n    this.texture.needsUpdate = true;\n  }\n\n  clear() {\n    this.ctx.globalCompositeOperation = 'source-over';\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  addTouch(point) {\n    const last = this.trail[this.trail.length - 1];\n\n    if (last) {\n      const dx = last.x - point.x;\n      const dy = last.y - point.y;\n      const dd = dx * dx + dy * dy;\n      const force = Math.max(this.minForce, Math.min(dd * 10000, 1));\n      this.force = smoothAverage(force, this.force, this.smoothing);\n\n      if (!!this.interpolate) {\n        const lines = Math.ceil(dd / Math.pow(this.radius * 0.5 / this.interpolate, 2));\n\n        if (lines > 1) {\n          for (let i = 1; i < lines; i++) {\n            this.trail.push({\n              x: last.x - dx / lines * i,\n              y: last.y - dy / lines * i,\n              age: 0,\n              force\n            });\n          }\n        }\n      }\n    }\n\n    this.trail.push({\n      x: point.x,\n      y: point.y,\n      age: 0,\n      force: this.force\n    });\n  }\n\n  drawTouch(point) {\n    const pos = {\n      x: point.x * this.size,\n      y: (1 - point.y) * this.size\n    };\n    let intensity = 1;\n\n    if (point.age < this.maxAge * 0.3) {\n      intensity = this.ease(point.age / (this.maxAge * 0.3));\n    } else {\n      intensity = this.ease(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7));\n    }\n\n    intensity *= point.force; // apply blending\n\n    this.ctx.globalCompositeOperation = this.blend;\n    const radius = this.size * this.radius * intensity;\n    const grd = this.ctx.createRadialGradient(pos.x, pos.y, Math.max(0, radius * 0.25), pos.x, pos.y, Math.max(0, radius));\n    grd.addColorStop(0, `rgba(255, 255, 255, ${this.intensity})`);\n    grd.addColorStop(1, `rgba(0, 0, 0, 0.0)`);\n    this.ctx.beginPath();\n    this.ctx.fillStyle = grd;\n    this.ctx.arc(pos.x, pos.y, Math.max(0, radius), 0, Math.PI * 2);\n    this.ctx.fill();\n  }\n\n}\n\nfunction useTrailTexture() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    size,\n    maxAge,\n    radius,\n    intensity,\n    interpolate,\n    smoothing,\n    minForce,\n    blend,\n    ease\n  } = config;\n  const trail = useMemo(() => new TrailTexture(config), [size, maxAge, radius, intensity, interpolate, smoothing, minForce, blend, ease]);\n  useFrame((_, delta) => void trail.update(delta));\n  const onMove = useCallback(e => trail.addTouch(e.uv), [trail]);\n  return [trail.texture, onMove];\n}\n\nexport { useTrailTexture };","map":{"version":3,"names":["useMemo","useCallback","useFrame","Texture","smoothAverage","current","measurement","smoothing","easeCircleOut","x","Math","sqrt","pow","TrailTexture","constructor","size","maxAge","radius","intensity","interpolate","minForce","blend","ease","trail","force","initTexture","canvas","document","createElement","width","height","ctx","getContext","fillStyle","fillRect","texture","id","style","update","delta","clear","forEach","point","i","age","splice","length","drawTouch","needsUpdate","globalCompositeOperation","addTouch","last","dx","dy","y","dd","max","min","lines","ceil","push","pos","grd","createRadialGradient","addColorStop","beginPath","arc","PI","fill","useTrailTexture","config","_","onMove","e","uv"],"sources":["/home/rodrigorvsn/workspace/study/threejs-journey/07-react-three-fiber/08-mouse-events-with-r3f/node_modules/@react-three/drei/core/useTrailTexture.js"],"sourcesContent":["import { useMemo, useCallback } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Texture } from 'three';\n\n/**\n *  Adapted from https://github.com/brunoimbrizi/interactive-particles/blob/master/src/scripts/webgl/particles/TrailTexture.js\n *  Changes:\n *    * accepts config as constructor params\n *    * frame-rate independent aging\n *    * added option to interpolate between slow mouse events\n *    * added option for smoothing between values to avoid large jumps in force\n */\n\n// smooth new sample (measurement) based on previous sample (current)\nfunction smoothAverage(current, measurement, smoothing = 0.9) {\n  return measurement * smoothing + current * (1.0 - smoothing);\n} // default ease\n\n\nconst easeCircleOut = x => Math.sqrt(1 - Math.pow(x - 1, 2));\n\nclass TrailTexture {\n  constructor({\n    size = 256,\n    maxAge = 750,\n    radius = 0.3,\n    intensity = 0.2,\n    interpolate = 0,\n    smoothing = 0,\n    minForce = 0.3,\n    blend = 'screen',\n    // source-over is canvas default. Others are slower\n    ease = easeCircleOut\n  } = {}) {\n    this.size = size;\n    this.maxAge = maxAge;\n    this.radius = radius;\n    this.intensity = intensity;\n    this.ease = ease;\n    this.interpolate = interpolate;\n    this.smoothing = smoothing;\n    this.minForce = minForce;\n    this.blend = blend;\n    this.trail = [];\n    this.force = 0;\n    this.initTexture();\n  }\n\n  initTexture() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = this.size;\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.texture = new Texture(this.canvas);\n    this.canvas.id = 'touchTexture';\n    this.canvas.style.width = this.canvas.style.height = `${this.canvas.width}px`;\n  }\n\n  update(delta) {\n    this.clear(); // age points\n\n    this.trail.forEach((point, i) => {\n      point.age += delta * 1000; // remove old\n\n      if (point.age > this.maxAge) {\n        this.trail.splice(i, 1);\n      }\n    }); // reset force when empty (when smoothing)\n\n    if (!this.trail.length) this.force = 0;\n    this.trail.forEach(point => {\n      this.drawTouch(point);\n    });\n    this.texture.needsUpdate = true;\n  }\n\n  clear() {\n    this.ctx.globalCompositeOperation = 'source-over';\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  addTouch(point) {\n    const last = this.trail[this.trail.length - 1];\n\n    if (last) {\n      const dx = last.x - point.x;\n      const dy = last.y - point.y;\n      const dd = dx * dx + dy * dy;\n      const force = Math.max(this.minForce, Math.min(dd * 10000, 1));\n      this.force = smoothAverage(force, this.force, this.smoothing);\n\n      if (!!this.interpolate) {\n        const lines = Math.ceil(dd / Math.pow(this.radius * 0.5 / this.interpolate, 2));\n\n        if (lines > 1) {\n          for (let i = 1; i < lines; i++) {\n            this.trail.push({\n              x: last.x - dx / lines * i,\n              y: last.y - dy / lines * i,\n              age: 0,\n              force\n            });\n          }\n        }\n      }\n    }\n\n    this.trail.push({\n      x: point.x,\n      y: point.y,\n      age: 0,\n      force: this.force\n    });\n  }\n\n  drawTouch(point) {\n    const pos = {\n      x: point.x * this.size,\n      y: (1 - point.y) * this.size\n    };\n    let intensity = 1;\n\n    if (point.age < this.maxAge * 0.3) {\n      intensity = this.ease(point.age / (this.maxAge * 0.3));\n    } else {\n      intensity = this.ease(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7));\n    }\n\n    intensity *= point.force; // apply blending\n\n    this.ctx.globalCompositeOperation = this.blend;\n    const radius = this.size * this.radius * intensity;\n    const grd = this.ctx.createRadialGradient(pos.x, pos.y, Math.max(0, radius * 0.25), pos.x, pos.y, Math.max(0, radius));\n    grd.addColorStop(0, `rgba(255, 255, 255, ${this.intensity})`);\n    grd.addColorStop(1, `rgba(0, 0, 0, 0.0)`);\n    this.ctx.beginPath();\n    this.ctx.fillStyle = grd;\n    this.ctx.arc(pos.x, pos.y, Math.max(0, radius), 0, Math.PI * 2);\n    this.ctx.fill();\n  }\n\n}\n\nfunction useTrailTexture(config = {}) {\n  const {\n    size,\n    maxAge,\n    radius,\n    intensity,\n    interpolate,\n    smoothing,\n    minForce,\n    blend,\n    ease\n  } = config;\n  const trail = useMemo(() => new TrailTexture(config), [size, maxAge, radius, intensity, interpolate, smoothing, minForce, blend, ease]);\n  useFrame((_, delta) => void trail.update(delta));\n  const onMove = useCallback(e => trail.addTouch(e.uv), [trail]);\n  return [trail.texture, onMove];\n}\n\nexport { useTrailTexture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}