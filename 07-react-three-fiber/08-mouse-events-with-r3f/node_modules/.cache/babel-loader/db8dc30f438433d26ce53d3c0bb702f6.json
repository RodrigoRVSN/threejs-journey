{"ast":null,"code":"import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst decomposeIntoBasis = (e1, e2, offset) => {\n  const i1 = Math.abs(e1.x) >= Math.abs(e1.y) && Math.abs(e1.x) >= Math.abs(e1.z) ? 0 : Math.abs(e1.y) >= Math.abs(e1.x) && Math.abs(e1.y) >= Math.abs(e1.z) ? 1 : 2;\n  const e2DegrowthOrder = [0, 1, 2].sort((a, b) => Math.abs(e2.getComponent(b)) - Math.abs(e2.getComponent(a)));\n  const i2 = i1 === e2DegrowthOrder[0] ? e2DegrowthOrder[1] : e2DegrowthOrder[0];\n  const a1 = e1.getComponent(i1);\n  const a2 = e1.getComponent(i2);\n  const b1 = e2.getComponent(i1);\n  const b2 = e2.getComponent(i2);\n  const c1 = offset.getComponent(i1);\n  const c2 = offset.getComponent(i2);\n  const y = (c2 - c1 * (a2 / a1)) / (b2 - b1 * (a2 / a1));\n  const x = (c1 - y * b1) / a1;\n  return [x, y];\n};\n\nconst ray = new THREE.Ray();\nconst intersection = new THREE.Vector3();\nconst offsetMatrix = new THREE.Matrix4();\n\nconst PlaneSlider = _ref => {\n  let {\n    dir1,\n    dir2,\n    axis\n  } = _ref;\n  const {\n    translation,\n    translationLimits,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    displayValues,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offsetX0 = React.useRef(0);\n  const offsetY0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (displayValues) {\n      divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      e1,\n      e2,\n      plane\n    };\n    offsetX0.current = translation.current[(axis + 1) % 3];\n    offsetY0.current = translation.current[(axis + 2) % 3];\n    onDragStart({\n      component: 'Slider',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        e1,\n        e2,\n        plane\n      } = clickInfo.current;\n      const [minX, maxX] = (translationLimits == null ? void 0 : translationLimits[(axis + 1) % 3]) || [undefined, undefined];\n      const [minY, maxY] = (translationLimits == null ? void 0 : translationLimits[(axis + 2) % 3]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      intersection.sub(clickPoint);\n      let [offsetX, offsetY] = decomposeIntoBasis(e1, e2, intersection);\n      /* let offsetY = (intersection.y - (intersection.x * e1.y) / e1.x) / (e2.y - (e2.x * e1.y) / e1.x)\n      let offsetX = (intersection.x - offsetY * e2.x) / e1.x */\n\n      if (minX !== undefined) {\n        offsetX = Math.max(offsetX, minX - offsetX0.current);\n      }\n\n      if (maxX !== undefined) {\n        offsetX = Math.min(offsetX, maxX - offsetX0.current);\n      }\n\n      if (minY !== undefined) {\n        offsetY = Math.max(offsetY, minY - offsetY0.current);\n      }\n\n      if (maxY !== undefined) {\n        offsetY = Math.min(offsetY, maxY - offsetY0.current);\n      }\n\n      translation.current[(axis + 1) % 3] = offsetX0.current + offsetX;\n      translation.current[(axis + 2) % 3] = offsetY0.current + offsetY;\n\n      if (displayValues) {\n        divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      }\n\n      offsetMatrix.makeTranslation(offsetX * e1.x + offsetY * e2.x, offsetX * e1.y + offsetY * e2.y, offsetX * e1.z + offsetY * e2.z);\n      onDrag(offsetMatrix);\n    }\n  }, [onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (displayValues) {\n      divRef.current.style.display = 'none';\n    }\n\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const pos1 = fixed ? 1 / 7 : scale / 7;\n  const length = fixed ? 0.225 : scale * 0.225;\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  const points = React.useMemo(() => [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, length, 0), new THREE.Vector3(length, length, 0), new THREE.Vector3(length, 0, 0), new THREE.Vector3(0, 0, 0)], [length]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(Html, {\n    position: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    position: [pos1 * 1.7, pos1 * 1.7, 0]\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: true,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    scale: length,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    side: THREE.DoubleSide\n  })), /*#__PURE__*/React.createElement(Line, {\n    position: [-length / 2, -length / 2, 0],\n    transparent: true,\n    depthTest: depthTest,\n    points: points,\n    lineWidth: lineWidth,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    userData: userData\n  })));\n};\n\nexport { PlaneSlider };","map":{"version":3,"names":["React","THREE","useThree","Line","Html","context","decomposeIntoBasis","e1","e2","offset","i1","Math","abs","x","y","z","e2DegrowthOrder","sort","a","b","getComponent","i2","a1","a2","b1","b2","c1","c2","ray","Ray","intersection","Vector3","offsetMatrix","Matrix4","PlaneSlider","dir1","dir2","axis","translation","translationLimits","annotationsClass","depthTest","scale","lineWidth","fixed","axisColors","hoveredColor","displayValues","opacity","onDragStart","onDrag","onDragEnd","userData","useContext","camControls","state","controls","divRef","useRef","objRef","clickInfo","offsetX0","offsetY0","isHovered","setIsHovered","useState","onPointerDown","useCallback","e","current","innerText","toFixed","style","display","stopPropagation","clickPoint","point","clone","origin","setFromMatrixPosition","matrixWorld","setFromMatrixColumn","normalize","normal","plane","Plane","setFromNormalAndCoplanarPoint","component","directions","enabled","target","setPointerCapture","pointerId","onPointerMove","minX","maxX","undefined","minY","maxY","copy","intersectPlane","direction","negate","sub","offsetX","offsetY","max","min","makeTranslation","onPointerUp","releasePointerCapture","onPointerOut","matrixL","useMemo","dir1N","dir2N","makeBasis","cross","pos1","length","color","points","createElement","ref","matrix","matrixAutoUpdate","position","background","padding","borderRadius","whiteSpace","className","visible","transparent","polygonOffset","polygonOffsetFactor","side","DoubleSide"],"sources":["/home/rodrigorvsn/workspace/study/threejs-journey/07-react-three-fiber/08-mouse-events-with-r3f/node_modules/@react-three/drei/web/pivotControls/PlaneSlider.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst decomposeIntoBasis = (e1, e2, offset) => {\n  const i1 = Math.abs(e1.x) >= Math.abs(e1.y) && Math.abs(e1.x) >= Math.abs(e1.z) ? 0 : Math.abs(e1.y) >= Math.abs(e1.x) && Math.abs(e1.y) >= Math.abs(e1.z) ? 1 : 2;\n  const e2DegrowthOrder = [0, 1, 2].sort((a, b) => Math.abs(e2.getComponent(b)) - Math.abs(e2.getComponent(a)));\n  const i2 = i1 === e2DegrowthOrder[0] ? e2DegrowthOrder[1] : e2DegrowthOrder[0];\n  const a1 = e1.getComponent(i1);\n  const a2 = e1.getComponent(i2);\n  const b1 = e2.getComponent(i1);\n  const b2 = e2.getComponent(i2);\n  const c1 = offset.getComponent(i1);\n  const c2 = offset.getComponent(i2);\n  const y = (c2 - c1 * (a2 / a1)) / (b2 - b1 * (a2 / a1));\n  const x = (c1 - y * b1) / a1;\n  return [x, y];\n};\n\nconst ray = new THREE.Ray();\nconst intersection = new THREE.Vector3();\nconst offsetMatrix = new THREE.Matrix4();\nconst PlaneSlider = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    displayValues,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offsetX0 = React.useRef(0);\n  const offsetY0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (displayValues) {\n      divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      e1,\n      e2,\n      plane\n    };\n    offsetX0.current = translation.current[(axis + 1) % 3];\n    offsetY0.current = translation.current[(axis + 2) % 3];\n    onDragStart({\n      component: 'Slider',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        e1,\n        e2,\n        plane\n      } = clickInfo.current;\n      const [minX, maxX] = (translationLimits == null ? void 0 : translationLimits[(axis + 1) % 3]) || [undefined, undefined];\n      const [minY, maxY] = (translationLimits == null ? void 0 : translationLimits[(axis + 2) % 3]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      intersection.sub(clickPoint);\n      let [offsetX, offsetY] = decomposeIntoBasis(e1, e2, intersection);\n      /* let offsetY = (intersection.y - (intersection.x * e1.y) / e1.x) / (e2.y - (e2.x * e1.y) / e1.x)\n      let offsetX = (intersection.x - offsetY * e2.x) / e1.x */\n\n      if (minX !== undefined) {\n        offsetX = Math.max(offsetX, minX - offsetX0.current);\n      }\n\n      if (maxX !== undefined) {\n        offsetX = Math.min(offsetX, maxX - offsetX0.current);\n      }\n\n      if (minY !== undefined) {\n        offsetY = Math.max(offsetY, minY - offsetY0.current);\n      }\n\n      if (maxY !== undefined) {\n        offsetY = Math.min(offsetY, maxY - offsetY0.current);\n      }\n\n      translation.current[(axis + 1) % 3] = offsetX0.current + offsetX;\n      translation.current[(axis + 2) % 3] = offsetY0.current + offsetY;\n\n      if (displayValues) {\n        divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      }\n\n      offsetMatrix.makeTranslation(offsetX * e1.x + offsetY * e2.x, offsetX * e1.y + offsetY * e2.y, offsetX * e1.z + offsetY * e2.z);\n      onDrag(offsetMatrix);\n    }\n  }, [onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (displayValues) {\n      divRef.current.style.display = 'none';\n    }\n\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const pos1 = fixed ? 1 / 7 : scale / 7;\n  const length = fixed ? 0.225 : scale * 0.225;\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  const points = React.useMemo(() => [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, length, 0), new THREE.Vector3(length, length, 0), new THREE.Vector3(length, 0, 0), new THREE.Vector3(0, 0, 0)], [length]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(Html, {\n    position: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    position: [pos1 * 1.7, pos1 * 1.7, 0]\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: true,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    scale: length,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    side: THREE.DoubleSide\n  })), /*#__PURE__*/React.createElement(Line, {\n    position: [-length / 2, -length / 2, 0],\n    transparent: true,\n    depthTest: depthTest,\n    points: points,\n    lineWidth: lineWidth,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    userData: userData\n  })));\n};\n\nexport { PlaneSlider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}