{"ast":null,"code":"import * as THREE from 'three';\nimport { useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\n\nfunction useVideoTexture(src, props) {\n  const {\n    unsuspend,\n    start,\n    crossOrigin,\n    muted,\n    loop,\n    ...rest\n  } = {\n    unsuspend: 'loadedmetadata',\n    crossOrigin: 'Anonymous',\n    muted: true,\n    loop: true,\n    start: true,\n    playsInline: true,\n    ...props\n  };\n  const gl = useThree(state => state.gl);\n  const texture = suspend(() => new Promise((res, rej) => {\n    const video = Object.assign(document.createElement('video'), {\n      src,\n      crossOrigin,\n      loop,\n      muted,\n      ...rest\n    });\n    const texture = new THREE.VideoTexture(video);\n    texture.encoding = gl.outputEncoding;\n    video.addEventListener(unsuspend, () => res(texture));\n  }), [src]);\n  useEffect(() => void (start && texture.image.play()), [texture, start]);\n  return texture;\n}\n\nexport { useVideoTexture };","map":{"version":3,"names":["THREE","useEffect","useThree","suspend","useVideoTexture","src","props","unsuspend","start","crossOrigin","muted","loop","rest","playsInline","gl","state","texture","Promise","res","rej","video","Object","assign","document","createElement","VideoTexture","encoding","outputEncoding","addEventListener","image","play"],"sources":["/home/rodrigorvsn/workspace/study/threejs-journey/07-react-three-fiber/08-mouse-events-with-r3f/node_modules/@react-three/drei/core/useVideoTexture.js"],"sourcesContent":["import * as THREE from 'three';\nimport { useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\n\nfunction useVideoTexture(src, props) {\n  const {\n    unsuspend,\n    start,\n    crossOrigin,\n    muted,\n    loop,\n    ...rest\n  } = {\n    unsuspend: 'loadedmetadata',\n    crossOrigin: 'Anonymous',\n    muted: true,\n    loop: true,\n    start: true,\n    playsInline: true,\n    ...props\n  };\n  const gl = useThree(state => state.gl);\n  const texture = suspend(() => new Promise((res, rej) => {\n    const video = Object.assign(document.createElement('video'), {\n      src,\n      crossOrigin,\n      loop,\n      muted,\n      ...rest\n    });\n    const texture = new THREE.VideoTexture(video);\n    texture.encoding = gl.outputEncoding;\n    video.addEventListener(unsuspend, () => res(texture));\n  }), [src]);\n  useEffect(() => void (start && texture.image.play()), [texture, start]);\n  return texture;\n}\n\nexport { useVideoTexture };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,KAA9B,EAAqC;EACnC,MAAM;IACJC,SADI;IAEJC,KAFI;IAGJC,WAHI;IAIJC,KAJI;IAKJC,IALI;IAMJ,GAAGC;EANC,IAOF;IACFL,SAAS,EAAE,gBADT;IAEFE,WAAW,EAAE,WAFX;IAGFC,KAAK,EAAE,IAHL;IAIFC,IAAI,EAAE,IAJJ;IAKFH,KAAK,EAAE,IALL;IAMFK,WAAW,EAAE,IANX;IAOF,GAAGP;EAPD,CAPJ;EAgBA,MAAMQ,EAAE,GAAGZ,QAAQ,CAACa,KAAK,IAAIA,KAAK,CAACD,EAAhB,CAAnB;EACA,MAAME,OAAO,GAAGb,OAAO,CAAC,MAAM,IAAIc,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;IACtD,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd,EAA+C;MAC3DnB,GAD2D;MAE3DI,WAF2D;MAG3DE,IAH2D;MAI3DD,KAJ2D;MAK3D,GAAGE;IALwD,CAA/C,CAAd;IAOA,MAAMI,OAAO,GAAG,IAAIhB,KAAK,CAACyB,YAAV,CAAuBL,KAAvB,CAAhB;IACAJ,OAAO,CAACU,QAAR,GAAmBZ,EAAE,CAACa,cAAtB;IACAP,KAAK,CAACQ,gBAAN,CAAuBrB,SAAvB,EAAkC,MAAMW,GAAG,CAACF,OAAD,CAA3C;EACD,CAX6B,CAAP,EAWnB,CAACX,GAAD,CAXmB,CAAvB;EAYAJ,SAAS,CAAC,MAAM,MAAMO,KAAK,IAAIQ,OAAO,CAACa,KAAR,CAAcC,IAAd,EAAf,CAAP,EAA6C,CAACd,OAAD,EAAUR,KAAV,CAA7C,CAAT;EACA,OAAOQ,OAAP;AACD;;AAED,SAASZ,eAAT"},"metadata":{},"sourceType":"module"}